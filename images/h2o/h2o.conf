listen:
  port: 443
  ssl:
    certificate-file: /app/garden.crt
    key-file: /app/garden.crt.key
user: nobody
hosts:
  "0.0.0.0":
    paths:
      "/":
        mruby.handler: |
          Proc.new do |env|
            result = {}
            result['headers'] = []
            env.each do |key, value|
              if not ["REQUEST_METHOD","SCRIPT_NAME","PATH_INFO","QUERY_STRING","SERVER_NAME","SERVER_PROTOCOL","SERVER_ADDR","SERVER_PORT","HOST","REMOTE_ADDR","REMOTE_PORT","h2o.is_ech","CONNECTION","rack.url_scheme","rack.multithread","rack.multiprocess","rack.run_once","rack.hijack?","rack.errors","rack.early_hints","SERVER_SOFTWARE","h2o.remaining_delegations","h2o.remaining_reprocesses", "h2o.get_rtt", "rack.input"].include?(key) 
                if (key != "HTTP_HOST") or (value != "0.0.0.0")
                  result['headers'].push([
                    [key.sub(/\AHTTP_/, "")].pack('m').strip(),
                    [value].pack('m').strip()
                  ])
                end
              end
            end
            result['version'] = [env["SERVER_PROTOCOL"]].pack('m').strip()
            result['uri'] = [env["PATH_INFO"] + (env["QUERY_STRING"] != "" ? ("?" + env["QUERY_STRING"]) : "")].pack('m').strip()
            result['method'] = [env["REQUEST_METHOD"]].pack('m').strip()
            result['body'] = [env["rack.input"] ? env["rack.input"].read : ""].pack('m').strip()
            [200, {}, [result.to_json]]
          end
access-log: /dev/null
error-log: /dev/null
pid-file: /dev/null
num-threads: 1
